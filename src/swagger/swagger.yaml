consumes:
- application/json
definitions:
  Checkstyle:
    description: Description of which Checkstyle lints are checked.
    example:
      AbbreviationAsWordInName: true
      AbstractClassName: true
      AnnotationLocation: false
      AnnotationUseStyle: true
      AnonInnerLength: false
      ArrayTrailingComma: false
      ArrayTypeStyle: false
      AtclauseOrder: true
      AvoidEscapedUnicodeCharacters: true
      AvoidInlineConditionals: true
      AvoidNestedBlocks: true
      AvoidStarImport: true
      AvoidStaticImport: true
      BooleanExpressionComplexity: false
      CatchParameterName: true
      ClassDataAbstractionCoupling: false
      ClassFanOutComplexity: true
      ClassTypeParameterName: true
      CommentsIndentation: false
      ConstantName: false
      CovariantEquals: false
      CustomImportOrder: true
      CyclomaticComplexity: true
      DeclarationOrder: false
      DefaultComesLast: false
      DescendantToken: true
      DesignForExtension: false
      EmptyBlock: true
      EmptyCatchBlock: false
      EmptyForInitializerPad: false
      EmptyForIteratorPad: false
      EmptyLineSeparator: false
      EmptyStatement: true
      EqualsAvoidNull: false
      EqualsHashCode: true
      ExecutableStatementCount: false
      ExplicitInitialization: true
      FallThrough: false
      FileLength: false
      FileTabCharacter: false
      FinalClass: true
      FinalLocalVariable: false
      FinalParameters: false
      GenericWhitespace: false
      Header: true
      HiddenField: true
      HideUtilityClassConstructor: false
      IllegalCatch: true
      IllegalImport: true
      IllegalInstantiation: true
      IllegalThrows: true
      IllegalToken: true
      IllegalTokenText: true
      IllegalType: false
      ImportControl: true
      ImportOrder: true
      Indentation: false
      InnerAssignment: false
      InnerTypeLast: true
      InterfaceIsType: false
      InterfaceTypeParameterName: false
      JavaNCSS: true
      JavadocMethod: true
      JavadocPackage: false
      JavadocParagraph: false
      JavadocStyle: true
      JavadocTagContinuationIndentation: true
      JavadocType: true
      JavadocVariable: false
      LeftCurly: false
      LineLength: true
      LocalFinalVariableName: true
      LocalVariableName: true
      MagicNumber: false
      MemberName: false
      MethodCount: true
      MethodLength: false
      MethodName: true
      MethodParamPad: true
      MethodTypeParameterName: true
      MissingCtor: false
      MissingDeprecated: false
      MissingOverride: false
      MissingSwitchDefault: false
      ModifiedControlVariable: true
      ModifierOrder: false
      MultipleStringLiterals: false
      MultipleVariableDeclarations: true
      MutableException: false
      NPathComplexity: true
      NeedBraces: true
      NestedForDepth: false
      NestedIfDepth: true
      NestedTryDepth: true
      NewlineAtEndOfFile: true
      NoClone: true
      NoFinalizer: false
      NoLineWrap: true
      NoWhitespaceAfter: true
      NoWhitespaceBefore: true
      NonEmptyAtclauseDescription: false
      OneStatementPerLine: false
      OneTopLevelClass: true
      OperatorWrap: true
      OuterTypeFilename: false
      OuterTypeNumber: false
      OverloadMethodsDeclarationOrder: false
      PackageAnnotation: true
      PackageDeclaration: true
      PackageName: true
      ParameterAssignment: true
      ParameterName: true
      ParameterNumber: false
      ParenPad: false
      RedundantImport: true
      RedundantModifier: false
      Regexp: true
      RegexpHeader: true
      RegexpMultiline: false
      RegexpOnFilename: false
      RegexpSingleline: true
      RegexpSinglelineJava: false
      RequireThis: false
      ReturnCount: false
      RightCurly: false
      SeparatorWrap: true
      SimplifyBooleanExpression: true
      SimplifyBooleanReturn: false
      SingleLineJavadoc: false
      SingleSpaceSeparator: false
      StaticVariableName: false
      StringLiteralEquality: false
      SummaryJavadoc: true
      SuperClone: true
      SuperFinalize: true
      SuppressWarnings: false
      SuppressWarningsHolder: true
      ThrowsCount: false
      TodoComment: true
      TrailingComment: false
      Translation: true
      TypeName: true
      TypecastParenPad: true
      UncommentedMain: true
      UniqueProperties: true
      UnnecessaryParentheses: false
      UnusedImports: false
      UpperEll: false
      VariableDeclarationUsageDistance: false
      VisibilityModifier: false
      WhitespaceAfter: false
      WhitespaceAround: true
      WriteTag: true
    properties:
      AbbreviationAsWordInName:
        description: The Check validate abbreviations(consecutive capital letters)
          length in identifier name, it also allow in enforce camel case naming.
        example: true
        type: boolean
      AbstractClassName:
        description: Ensures that the names of abstract classes conforming to some
          regular expression.
        example: true
        type: boolean
      AnnotationLocation:
        description: Check location of annotation on language elements.
        example: false
        type: boolean
      AnnotationUseStyle:
        description: This check controls the style with the usage of annotations.
        example: true
        type: boolean
      AnonInnerLength:
        description: Checks for long anonymous inner classes.
        example: false
        type: boolean
      ArrayTrailingComma:
        description: Checks if array initialization contains optional trailing comma.
        example: false
        type: boolean
      ArrayTypeStyle:
        description: Checks the style of array type definitions.
        example: false
        type: boolean
      AtclauseOrder:
        description: Checks the order of at-clauses.
        example: true
        type: boolean
      AvoidEscapedUnicodeCharacters:
        description: Restrict using Unicode escapes.
        example: true
        type: boolean
      AvoidInlineConditionals:
        description: Detects inline conditionals.
        example: true
        type: boolean
      AvoidNestedBlocks:
        description: Finds nested blocks.
        example: true
        type: boolean
      AvoidStarImport:
        description: Check that finds import statements that use the * notation.
        example: true
        type: boolean
      AvoidStaticImport:
        description: Check that finds static imports.
        example: true
        type: boolean
      BooleanExpressionComplexity:
        description: Restricts nested boolean operators (&&, ||, &, | and ^) to a
          specified depth (default = 3).
        example: false
        type: boolean
      CatchParameterName:
        description: Checks that catch parameter names conform to a format specified
          by the format property.
        example: true
        type: boolean
      ClassDataAbstractionCoupling:
        description: This metric measures the number of instantiations of other classes
          within the given class.
        example: false
        type: boolean
      ClassFanOutComplexity:
        description: The number of other classes a given class relies on.
        example: true
        type: boolean
      ClassTypeParameterName:
        description: Checks that class type parameter names conform to a format specified
          by the format property.
        example: true
        type: boolean
      CommentsIndentation:
        description: Controls the indentation between comments and surrounding code.
        example: false
        type: boolean
      ConstantName:
        description: Checks that constant names conform to a format specified by the
          format property.
        example: false
        type: boolean
      CovariantEquals:
        description: Checks that if a class defines a covariant method equals, then
          it defines method equals(java.lang.Object).
        example: false
        type: boolean
      CustomImportOrder:
        description: Checks that the groups of import declarations appear in the order
          specified by the user.
        example: true
        type: boolean
      CyclomaticComplexity:
        description: Checks cyclomatic complexity against a specified limit.
        example: true
        type: boolean
      DeclarationOrder:
        description: Checks that the parts of a class or interface declaration appear
          in the order suggested by the Code Conventions for the Java Programming
          Language.
        example: false
        type: boolean
      DefaultComesLast:
        description: Check that the default is after all the cases in a switch statement.
        example: false
        type: boolean
      DescendantToken:
        description: Checks for restricted tokens beneath other tokens.
        example: true
        type: boolean
      DesignForExtension:
        description: Checks that classes are designed for inheritance.
        example: false
        type: boolean
      EmptyBlock:
        description: Checks for empty blocks.
        example: true
        type: boolean
      EmptyCatchBlock:
        description: Checks for empty catch blocks with few options to skip violation.
        example: false
        type: boolean
      EmptyForInitializerPad:
        description: Checks the padding of an empty for initializer; that is whether
          a space is required at an empty for initializer, or such spaces are forbidden.
        example: false
        type: boolean
      EmptyForIteratorPad:
        description: Checks the padding of an empty for iterator; that is whether
          a space is required at an empty for iterator, or such spaces are forbidden.
        example: false
        type: boolean
      EmptyLineSeparator:
        description: Checks for blank line separators.
        example: false
        type: boolean
      EmptyStatement:
        description: Detects empty statements (standalone ';').
        example: true
        type: boolean
      EqualsAvoidNull:
        description: Checks that any combination of String literals is on the left
          side of an equals() comparison.
        example: false
        type: boolean
      EqualsHashCode:
        description: Checks that classes that override equals() also override hashCode().
        example: true
        type: boolean
      ExecutableStatementCount:
        description: Restricts the number of executable statements to a specified
          limit (default = 30).
        example: false
        type: boolean
      ExplicitInitialization:
        description: Checks if any class or object member explicitly initialized to
          default for its type value (null for object references, zero for numeric
          types and char and false for boolean.
        example: true
        type: boolean
      FallThrough:
        description: Checks for fall through in switch statements Finds locations
          where a case contains Java code - but lacks a break, return, throw or continue
          statement.
        example: false
        type: boolean
      FileLength:
        description: Checks for long source files.
        example: false
        type: boolean
      FileTabCharacter:
        description: Checks to see if a file contains a tab character.
        example: false
        type: boolean
      FinalClass:
        description: Checks that class which has only private constructors is declared
          as final.
        example: true
        type: boolean
      FinalLocalVariable:
        description: Ensures that local variables that never get their values changed,
          must be declared final.
        example: false
        type: boolean
      FinalParameters:
        description: Check that method/constructor/catch/foreach parameters are final.
        example: false
        type: boolean
      GenericWhitespace:
        description: Checks that the whitespace around the Generic tokens < and >
          are correct to the typical convention.
        example: false
        type: boolean
      Header:
        description: Checks the header of the source against a fixed header file.
        example: true
        type: boolean
      HiddenField:
        description: Checks that a local variable or a parameter does not shadow a
          field that is defined in the same class.
        example: true
        type: boolean
      HideUtilityClassConstructor:
        description: Make sure that utility classes (classes that contain only static
          methods) do not have a public constructor.
        example: false
        type: boolean
      IllegalCatch:
        description: Catching java.lang.Exception, java.lang.Error or java.lang.RuntimeException
          is almost never acceptable.
        example: true
        type: boolean
      IllegalImport:
        description: Checks for imports from a set of illegal packages.
        example: true
        type: boolean
      IllegalInstantiation:
        description: Checks for illegal instantiations where a factory method is preferred.
        example: true
        type: boolean
      IllegalThrows:
        description: Throwing java.lang.Error or java.lang.RuntimeException is almost
          never acceptable.
        example: true
        type: boolean
      IllegalToken:
        description: Checks for illegal tokens.
        example: true
        type: boolean
      IllegalTokenText:
        description: Checks for illegal token text.
        example: true
        type: boolean
      IllegalType:
        description: Checks that particular class are never used as types in variable
          declarations, return values or parameters.
        example: false
        type: boolean
      ImportControl:
        description: Check that controls what packages can be imported in each package.
        example: true
        type: boolean
      ImportOrder:
        description: Ensures that groups of imports come in a specific order.
        example: true
        type: boolean
      Indentation:
        description: Checks correct indentation of Java Code.
        example: false
        type: boolean
      InnerAssignment:
        description: Checks for assignments in subexpressions, such as in String s
          = Integer.toString(i = 2);.
        example: false
        type: boolean
      InnerTypeLast:
        description: Check nested (internal) classes/interfaces are declared at the
          bottom of the class after all method and field declarations.
        example: true
        type: boolean
      InterfaceIsType:
        description: Implements Bloch, Effective Java, Item 17 - Use Interfaces only
          to define types.
        example: false
        type: boolean
      InterfaceTypeParameterName:
        description: Checks that interface type parameter names conform to a format
          specified by the format property.
        example: false
        type: boolean
      JavaNCSS:
        description: This check calculates the Non Commenting Source Statements (NCSS)
          metric for Java source files and methods.
        example: true
        type: boolean
      JavadocMethod:
        description: Checks the Javadoc of a method or constructor.
        example: true
        type: boolean
      JavadocPackage:
        description: Checks that all packages have a package documentation.
        example: false
        type: boolean
      JavadocParagraph:
        description: Checks Javadoc paragraphs.
        example: false
        type: boolean
      JavadocStyle:
        description: Custom Checkstyle Check to validate Javadoc.
        example: true
        type: boolean
      JavadocTagContinuationIndentation:
        description: Checks the indentation of the continuation lines in at-clauses.
        example: true
        type: boolean
      JavadocType:
        description: Checks the Javadoc of a type.
        example: true
        type: boolean
      JavadocVariable:
        description: Checks that a variable has Javadoc comment.
        example: false
        type: boolean
      LeftCurly:
        description: 'Checks the placement of left curly braces on types, methods
          and other blocks:'
        example: false
        type: boolean
      LineLength:
        description: Checks for long lines.
        example: true
        type: boolean
      LocalFinalVariableName:
        description: Checks that local final variable names conform to a format specified
          by the format property.
        example: true
        type: boolean
      LocalVariableName:
        description: Checks that local, non-final variable names conform to a format
          specified by the format property.
        example: true
        type: boolean
      MagicNumber:
        description: Checks for magic numbers.
        example: false
        type: boolean
      MemberName:
        description: Checks that instance variable names conform to a format specified
          by the format property.
        example: false
        type: boolean
      MethodCount:
        description: Checks the number of methods declared in each type.
        example: true
        type: boolean
      MethodLength:
        description: Checks for long methods.
        example: false
        type: boolean
      MethodName:
        description: Checks that method names conform to a format specified by the
          format property.
        example: true
        type: boolean
      MethodParamPad:
        description: Checks the padding between the identifier of a method definition,
          constructor definition, method call, or constructor invocation; and the
          left parenthesis of the parameter list.
        example: true
        type: boolean
      MethodTypeParameterName:
        description: Checks that class type parameter names conform to a format specified
          by the format property.
        example: true
        type: boolean
      MissingCtor:
        description: Checks that classes (except abstract one) define a ctor and don't
          rely on the default one.
        example: false
        type: boolean
      MissingDeprecated:
        description: This class is used to verify that both the java.lang.Deprecated
          annotation is present and the @deprecated Javadoc tag is present when either
          is present.
        example: false
        type: boolean
      MissingOverride:
        description: This class is used to verify that the java.lang.Override annotation
          is present when the {@inheritDoc} javadoc tag is present.
        example: false
        type: boolean
      MissingSwitchDefault:
        description: Checks that switch statement has 'default' clause.
        example: false
        type: boolean
      ModifiedControlVariable:
        description: Check for ensuring that for loop control variables are not modified
          inside the for block.
        example: true
        type: boolean
      ModifierOrder:
        description: Checks that the order of modifiers conforms to the suggestions
          in the Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3.
        example: false
        type: boolean
      MultipleStringLiterals:
        description: Checks for multiple occurrences of the same string literal within
          a single file.
        example: false
        type: boolean
      MultipleVariableDeclarations:
        description: Checks that each variable declaration is in its own statement
          and on its own line.
        example: true
        type: boolean
      MutableException:
        description: Ensures that exceptions (defined as any class name conforming
          to some regular expression) are immutable.
        example: false
        type: boolean
      NPathComplexity:
        description: Checks the npath complexity against a specified limit (default
          = 200).
        example: true
        type: boolean
      NeedBraces:
        description: Checks for braces around code blocks.
        example: true
        type: boolean
      NestedForDepth:
        description: Restricts nested for blocks to a specified depth (default = 1).
        example: false
        type: boolean
      NestedIfDepth:
        description: Restricts nested if-else blocks to a specified depth (default
          = 1).
        example: true
        type: boolean
      NestedTryDepth:
        description: Restricts nested try-catch-finally blocks to a specified depth
          (default = 1).
        example: true
        type: boolean
      NewlineAtEndOfFile:
        description: Checks that there is a newline at the end of each file.
        example: true
        type: boolean
      NoClone:
        description: Checks that the clone method is not overridden from the Object
          class.
        example: true
        type: boolean
      NoFinalizer:
        description: Checks that no method having zero parameters is defined using
          the name finalize.
        example: false
        type: boolean
      NoLineWrap:
        description: Checks that chosen statements are not line-wrapped.
        example: true
        type: boolean
      NoWhitespaceAfter:
        description: Checks that there is no whitespace after a token.
        example: true
        type: boolean
      NoWhitespaceBefore:
        description: Checks that there is no whitespace before a token.
        example: true
        type: boolean
      NonEmptyAtclauseDescription:
        description: Checks that the at-clause tag is followed by description .
        example: false
        type: boolean
      OneStatementPerLine:
        description: Checks that there is only one statement per line.
        example: false
        type: boolean
      OneTopLevelClass:
        description: Checks that each top-level class, interfaces or enum resides
          in a source file of its own.
        example: true
        type: boolean
      OperatorWrap:
        description: Checks line wrapping for operators.
        example: true
        type: boolean
      OuterTypeFilename:
        description: Checks that the outer type name and the file name match.
        example: false
        type: boolean
      OuterTypeNumber:
        description: Checks for the number of defined types at the 'outer' level.
        example: false
        type: boolean
      OverloadMethodsDeclarationOrder:
        description: Checks that overload methods are grouped together.
        example: false
        type: boolean
      PackageAnnotation:
        description: This check makes sure that all package annotations are in the
          package-info.java file.
        example: true
        type: boolean
      PackageDeclaration:
        description: Ensures there is a package declaration and (optionally) in the
          correct directory.
        example: true
        type: boolean
      PackageName:
        description: Checks that package names conform to a format specified by the
          format property.
        example: true
        type: boolean
      ParameterAssignment:
        description: Disallow assignment of parameters.
        example: true
        type: boolean
      ParameterName:
        description: Checks that parameter names conform to a format specified by
          the format property.
        example: true
        type: boolean
      ParameterNumber:
        description: Checks the number of parameters that a method or constructor
          has.
        example: false
        type: boolean
      ParenPad:
        description: Checks the padding of parentheses; that is whether a space is
          required after a left parenthesis and before a right parenthesis, or such
          spaces are forbidden, with the exception that it does not check for padding
          of the right parenthesis at an empty for iterator.
        example: false
        type: boolean
      RedundantImport:
        description: Checks for imports that are redundant.
        example: true
        type: boolean
      RedundantModifier:
        description: Checks for redundant modifiers in interface and annotation definitions,
          final modifier on methods of final classes, inner interface declarations
          that are declared as static, non public class constructors and enum constructors,
          nested enum definitions that are declared as static.
        example: false
        type: boolean
      Regexp:
        description: A check that makes sure that a specified pattern exists (or not)
          in the file.
        example: true
        type: boolean
      RegexpHeader:
        description: Checks the header of the source against a header file that contains
          a
        example: true
        type: boolean
      RegexpMultiline:
        description: Implementation of a check that looks that matches across multiple
          lines in any file type.
        example: false
        type: boolean
      RegexpOnFilename:
        description: Implementation of a check that matches based on file and/or folder
          path.
        example: false
        type: boolean
      RegexpSingleline:
        description: Implementation of a check that looks for a single line in any
          file type.
        example: true
        type: boolean
      RegexpSinglelineJava:
        description: Implementation of a check that looks for a single line in Java
          files.
        example: false
        type: boolean
      RequireThis:
        description: Checks that code doesn't rely on the 'this' default.
        example: false
        type: boolean
      ReturnCount:
        description: Restricts return statements to a specified count (default = 2).
        example: false
        type: boolean
      RightCurly:
        description: Checks the placement of right curly braces.
        example: false
        type: boolean
      SeparatorWrap:
        description: Checks line wrapping with separators.
        example: true
        type: boolean
      SimplifyBooleanExpression:
        description: Checks for overly complicated boolean expressions.
        example: true
        type: boolean
      SimplifyBooleanReturn:
        description: Checks for overly complicated boolean return statements.
        example: false
        type: boolean
      SingleLineJavadoc:
        description: Checks that a JavaDoc block which can fit on a single line and
          doesn't contain at-clauses
        example: false
        type: boolean
      SingleSpaceSeparator:
        description: Checks that non-whitespace characters are separated by no more
          than one whitespace.
        example: false
        type: boolean
      StaticVariableName:
        description: Checks that static, non-final variable names conform to a format
          specified by the format property.
        example: false
        type: boolean
      StringLiteralEquality:
        description: Checks that string literals are not used with == or !=.
        example: false
        type: boolean
      SummaryJavadoc:
        description: Checks that Javadoc summary sentence does not contain phrases
          that are not recommended to use.
        example: true
        type: boolean
      SuperClone:
        description: Checks that an overriding clone() method invokes super.clone().
        example: true
        type: boolean
      SuperFinalize:
        description: Checks that an overriding finalize() method invokes super.finalize().
        example: true
        type: boolean
      SuppressWarnings:
        description: This check allows you to specify what warnings that
        example: false
        type: boolean
      SuppressWarningsHolder:
        description: This check allows for finding code that should not be reported
          by Checkstyle
        example: true
        type: boolean
      ThrowsCount:
        description: Restricts throws statements to a specified count (default = 4).
        example: false
        type: boolean
      TodoComment:
        description: A check for TODO comments.
        example: true
        type: boolean
      TrailingComment:
        description: The check to ensure that requires that comments be the only thing
          on a line.
        example: false
        type: boolean
      Translation:
        description: The TranslationCheck class helps to ensure the correct translation
          of code by checking property files for consistency regarding their keys.
        example: true
        type: boolean
      TypeName:
        description: Checks that type names conform to a format specified by the format
          property.
        example: true
        type: boolean
      TypecastParenPad:
        description: Checks the padding of parentheses for typecasts.
        example: true
        type: boolean
      UncommentedMain:
        description: Detects uncommented main methods.
        example: true
        type: boolean
      UniqueProperties:
        description: Detects duplicated keys in properties files.
        example: true
        type: boolean
      UnnecessaryParentheses:
        description: Checks if unnecessary parentheses are used in a statement or
          expression.
        example: false
        type: boolean
      UnusedImports:
        description: Checks for unused import statements.
        example: false
        type: boolean
      UpperEll:
        description: Checks that long constants are defined with an upper ell.
        example: false
        type: boolean
      VariableDeclarationUsageDistance:
        description: Checks the distance between declaration of variable and its first
          usage.
        example: false
        type: boolean
      VisibilityModifier:
        description: Checks visibility of class members.
        example: false
        type: boolean
      WhitespaceAfter:
        description: Checks that a token is followed by whitespace, with the exception
          that it does not check for whitespace after the semicolon of an empty for
          iterator.
        example: false
        type: boolean
      WhitespaceAround:
        description: Checks that a token is surrounded by whitespace.
        example: true
        type: boolean
      WriteTag:
        description: Outputs a JavaDoc tag as information.
        example: true
        type: boolean
    title: Checkstyle
    type: object
  Findbugs:
    description: Description of which Findbugs bugs are checked.
    example:
      name: Porro aut quia.
    properties:
      name:
        example: Porro aut quia.
        type: string
    title: Findbugs
    type: object
  GithubtokenMt:
    description: GithubtokenMt media type (default view)
    example:
      token: Consequatur labore harum.
    properties:
      token:
        example: Consequatur labore harum.
        type: string
    title: 'Mediatype identifier: application/githubtoken.mt; view=default'
    type: object
  UserCreate:
    description: payload used to sign up a user
    example:
      email: rd
      name: ye
      password: njq
    properties:
      email:
        description: User email
        example: rd
        format: email
        minLength: 1
        type: string
      name:
        example: ye
        minLength: 1
        type: string
      password:
        example: njq
        minLength: 2
        type: string
    title: UserCreate
    type: object
  UserMt:
    description: UserMt media type (default view)
    example:
      email: d
      id: 5.097103e+18
      name: b
    properties:
      email:
        description: User email
        example: d
        format: email
        minLength: 1
        type: string
      id:
        example: 5.097103e+18
        format: int64
        type: integer
      name:
        example: b
        minLength: 1
        type: string
    title: 'Mediatype identifier: application/user.mt; view=default'
    type: object
  bug_profile:
    description: A bug profile
    example:
      checkstyle:
        AbbreviationAsWordInName: true
        AbstractClassName: true
        AnnotationLocation: false
        AnnotationUseStyle: true
        AnonInnerLength: false
        ArrayTrailingComma: false
        ArrayTypeStyle: false
        AtclauseOrder: true
        AvoidEscapedUnicodeCharacters: true
        AvoidInlineConditionals: true
        AvoidNestedBlocks: true
        AvoidStarImport: true
        AvoidStaticImport: true
        BooleanExpressionComplexity: false
        CatchParameterName: true
        ClassDataAbstractionCoupling: false
        ClassFanOutComplexity: true
        ClassTypeParameterName: true
        CommentsIndentation: false
        ConstantName: false
        CovariantEquals: false
        CustomImportOrder: true
        CyclomaticComplexity: true
        DeclarationOrder: false
        DefaultComesLast: false
        DescendantToken: true
        DesignForExtension: false
        EmptyBlock: true
        EmptyCatchBlock: false
        EmptyForInitializerPad: false
        EmptyForIteratorPad: false
        EmptyLineSeparator: false
        EmptyStatement: true
        EqualsAvoidNull: false
        EqualsHashCode: true
        ExecutableStatementCount: false
        ExplicitInitialization: true
        FallThrough: false
        FileLength: false
        FileTabCharacter: false
        FinalClass: true
        FinalLocalVariable: false
        FinalParameters: false
        GenericWhitespace: false
        Header: true
        HiddenField: true
        HideUtilityClassConstructor: false
        IllegalCatch: true
        IllegalImport: true
        IllegalInstantiation: true
        IllegalThrows: true
        IllegalToken: true
        IllegalTokenText: true
        IllegalType: false
        ImportControl: true
        ImportOrder: true
        Indentation: false
        InnerAssignment: false
        InnerTypeLast: true
        InterfaceIsType: false
        InterfaceTypeParameterName: false
        JavaNCSS: true
        JavadocMethod: true
        JavadocPackage: false
        JavadocParagraph: false
        JavadocStyle: true
        JavadocTagContinuationIndentation: true
        JavadocType: true
        JavadocVariable: false
        LeftCurly: false
        LineLength: true
        LocalFinalVariableName: true
        LocalVariableName: true
        MagicNumber: false
        MemberName: false
        MethodCount: true
        MethodLength: false
        MethodName: true
        MethodParamPad: true
        MethodTypeParameterName: true
        MissingCtor: false
        MissingDeprecated: false
        MissingOverride: false
        MissingSwitchDefault: false
        ModifiedControlVariable: true
        ModifierOrder: false
        MultipleStringLiterals: false
        MultipleVariableDeclarations: true
        MutableException: false
        NPathComplexity: true
        NeedBraces: true
        NestedForDepth: false
        NestedIfDepth: true
        NestedTryDepth: true
        NewlineAtEndOfFile: true
        NoClone: true
        NoFinalizer: false
        NoLineWrap: true
        NoWhitespaceAfter: true
        NoWhitespaceBefore: true
        NonEmptyAtclauseDescription: false
        OneStatementPerLine: false
        OneTopLevelClass: true
        OperatorWrap: true
        OuterTypeFilename: false
        OuterTypeNumber: false
        OverloadMethodsDeclarationOrder: false
        PackageAnnotation: true
        PackageDeclaration: true
        PackageName: true
        ParameterAssignment: true
        ParameterName: true
        ParameterNumber: false
        ParenPad: false
        RedundantImport: true
        RedundantModifier: false
        Regexp: true
        RegexpHeader: true
        RegexpMultiline: false
        RegexpOnFilename: false
        RegexpSingleline: true
        RegexpSinglelineJava: false
        RequireThis: false
        ReturnCount: false
        RightCurly: false
        SeparatorWrap: true
        SimplifyBooleanExpression: true
        SimplifyBooleanReturn: false
        SingleLineJavadoc: false
        SingleSpaceSeparator: false
        StaticVariableName: false
        StringLiteralEquality: false
        SummaryJavadoc: true
        SuperClone: true
        SuperFinalize: true
        SuppressWarnings: false
        SuppressWarningsHolder: true
        ThrowsCount: false
        TodoComment: true
        TrailingComment: false
        Translation: true
        TypeName: true
        TypecastParenPad: true
        UncommentedMain: true
        UniqueProperties: true
        UnnecessaryParentheses: false
        UnusedImports: false
        UpperEll: false
        VariableDeclarationUsageDistance: false
        VisibilityModifier: false
        WhitespaceAfter: false
        WhitespaceAround: true
        WriteTag: true
      findbugs:
        name: Porro aut quia.
      name: Est iure perspiciatis optio.
    properties:
      checkstyle:
        $ref: '#/definitions/Checkstyle'
      findbugs:
        $ref: '#/definitions/Findbugs'
      name:
        example: Est iure perspiciatis optio.
        type: string
    title: bug_profile
    type: object
host: localhost:8081
info:
  description: The next big thing
  title: Gradebook
  version: ""
paths:
  /api/GHtoken:
    get:
      description: Returns the GH token
      operationId: GithubToken#read
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GithubtokenMt'
      schemes:
      - http
      summary: read GithubToken
      tags:
      - GithubToken
  /api/auth/gh:
    post:
      description: Create or login a user with GitHub OAuth
      operationId: github_auth#create
      responses:
        "302":
          description: Found
      schemes:
      - http
      summary: create github_auth
      tags:
      - github_auth
  /api/bug-profile:
    get:
      description: Show all of my bug profiles
      operationId: bug_profile#list
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: list bug_profile
      tags:
      - bug_profile
    post:
      description: Make me a new bug profile
      operationId: bug_profile#create
      parameters:
      - description: A bug profile
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/bug_profile'
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: create bug_profile
      tags:
      - bug_profile
  /api/bug-profile/{profileID}:
    delete:
      description: I don't want this bug profile anymore
      operationId: bug_profile#delete
      parameters:
      - description: The profile's unique identifier
        in: path
        name: profileID
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - http
      summary: delete bug_profile
      tags:
      - bug_profile
    get:
      description: Show a single bug profile
      operationId: bug_profile#show
      parameters:
      - description: The profile's unique identifier
        in: path
        name: profileID
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - http
      summary: show bug_profile
      tags:
      - bug_profile
    put:
      description: Update my pre-existing bug profile
      operationId: bug_profile#update
      parameters:
      - description: The profile's unique identifier
        in: path
        name: profileID
        required: true
        type: integer
      - description: A bug profile
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/bug_profile'
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      schemes:
      - http
      summary: update bug_profile
      tags:
      - bug_profile
  /api/swagger.json:
    get:
      operationId: swagger#/api/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download src/swagger/swagger.json
  /api/user:
    post:
      description: Sign up for the first time
      operationId: user#create
      parameters:
      - description: payload used to sign up a user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserCreate'
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/UserMt'
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      schemes:
      - http
      summary: create user
      tags:
      - user
  /api/user/{userID}:
    get:
      description: Get the detials about this particular account
      operationId: user#read
      parameters:
      - description: The user's unique identifier
        in: path
        name: userID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserMt'
        "500":
          description: Internal Server Error
      schemes:
      - http
      summary: read user
      tags:
      - user
    put:
      description: Adjust your account settings
      operationId: user#update
      parameters:
      - description: The user's unique identifier
        in: path
        name: userID
        required: true
        type: integer
      - description: payload used to sign up a user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserCreate'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserMt'
        "500":
          description: Internal Server Error
      schemes:
      - http
      summary: update user
      tags:
      - user
produces:
- application/json
responses:
  Conflict:
    description: Conflict
  Found:
    description: Found
  InternalServerError:
    description: Internal Server Error
  NotFound:
    description: Not Found
  OK:
    description: OK
schemes:
- http
securityDefinitions:
  jwt:
    description: |-
      For routes that require an authorization token

      **Token URL**: https://example.com/token

      **Security Scopes**:
        * `profiles:read`: Can read profiles
        * `profiles:write`: Can update profiles
        * `projects:read`: Can read projects
        * `projects:write`: Can update projects
        * `settings:read`: Can read settings
        * `settings:write`: Can update settings
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
